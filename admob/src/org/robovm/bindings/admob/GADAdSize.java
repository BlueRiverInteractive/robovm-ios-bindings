
package org.robovm.bindings.admob;

import org.robovm.apple.coregraphics.CGSize;
import org.robovm.rt.bro.Struct;
import org.robovm.rt.bro.annotation.ByVal;
import org.robovm.rt.bro.annotation.MachineSizedUInt;
import org.robovm.rt.bro.annotation.StructMember;

/** A valid GADAdSize is considered to be one of the predefined GADAdSize constants or a GADAdSize constructed by
 * {@link #getGADAdSize(CGSize)}, {@link #getFullWidthPortrait(float)}, {@link #getFullWidthLandscape(float)}.
 * 
 * To obtain a concrete CGSize, use the function {@link #getCGSize(GADAdSize)}. */
public class GADAdSize extends Struct<GADAdSize> {
    private GADAdSize () {
    }

    @StructMember(0)
    public native @ByVal CGSize size ();

    @StructMember(0)
    public native GADAdSize size (@ByVal CGSize size);

    @StructMember(1)
    public native @MachineSizedUInt long flags ();

    @StructMember(1)
    public native GADAdSize flags (@MachineSizedUInt long flags);

    /** @return {@code true} if size is one of the predefined constants or is a custom GADAdSize generated by
     *         {@link #getGADAdSize(CGSize)}. */
    public boolean isValid () {
        return GADAdSizeManager.isValid(this);
    }

    /** Given a GADAdSize constant, returns a {@link CGSize}. If the GADAdSize is unknown, returns {@link CGSize#Zero()}.
     * @param size
     * @return */
    public @ByVal CGSize toCGSize () {
        return GADAdSizeManager.getCGSize(this);
    }

    @Override
    public boolean equals (Object obj) {
        return obj instanceof GADAdSize && GADAdSizeManager.equals(this, (GADAdSize)obj);
    }

    /** @return Given a GADAdSize constant, returns a String describing the GADAdSize. */
    @Override
    public String toString () {
        return GADAdSizeManager.toString(this);
    }

    /** @return iPhone and iPod Touch ad size. Typically 320x50. */
    public static @ByVal GADAdSize banner () {
        return GADAdSizeManager.banner();
    }

    /** @return Medium Rectangle size for the iPad (especially in a UISplitView's left pane). Typically 300x250. */
    public static @ByVal GADAdSize mediumRectangle () {
        return GADAdSizeManager.mediumRectangle();
    }

    /** @return Full Banner size for the iPad (especially in a UIPopoverController or in UIModalPresentationFormSheet). Typically
     *         468x60. */
    public static @ByVal GADAdSize fullBanner () {
        return GADAdSizeManager.fullBanner();
    }

    /** @return Leaderboard size for the iPad. Typically 728x90. */
    public static @ByVal GADAdSize leaderboard () {
        return GADAdSizeManager.leaderboard();
    }

    /** @return Skyscraper size for the iPad. Mediation only. AdMob/Google does not offer this size. Typically 120x600. */
    public static @ByVal GADAdSize skyscraper () {
        return GADAdSizeManager.skyscraper();
    }

    /** @return An ad size that spans the full width of the application in portrait orientation. The height is typically 50 pixels
     *         on an iPhone/iPod UI, and 90 pixels tall on an iPad UI. */
    public static @ByVal GADAdSize smartBannerPortrait () {
        return GADAdSizeManager.smartBannerPortrait();
    }

    /** @return An ad size that spans the full width of the application in landscape orientation. The height is typically 32 pixels
     *         on an iPhone/iPod UI, and 90 pixels tall on an iPad UI. */
    public static @ByVal GADAdSize smartBannerLandscape () {
        return GADAdSizeManager.smartBannerLandscape();
    }

    /** @return Invalid ad size marker. */
    public static @ByVal GADAdSize invalid () {
        return GADAdSizeManager.invalid();
    }

    /** Given a CGSize, return a custom GADAdSize. Use this only if you require a non-standard size, otherwise, use one of the
     * standard size constants above.
     * @param size
     * @return */
    public static @ByVal GADAdSize getGADAdSize (@ByVal CGSize size) {
        return GADAdSizeManager.getGADAdSize(size);
    }

    /** Get a custom GADAdSize that spans the full width of the application in portrait orientation with the height provided.
     * @param height
     * @return */
    public static @ByVal GADAdSize getFullWidthPortrait (float height) {
        return GADAdSizeManager.getFullWidthPortrait(height);
    }

    /** Get a custom GADAdSize that spans the full width of the application in landscape orientation with the height provided.
     * @param height
     * @return */
    public static @ByVal GADAdSize getFullWidthLandscape (float height) {
        return GADAdSizeManager.getFullWidthLandscape(height);
    }
}
