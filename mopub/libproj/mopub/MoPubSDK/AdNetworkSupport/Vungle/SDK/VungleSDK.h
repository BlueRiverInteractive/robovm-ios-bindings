//
//  VungleSDK.h
//  Vungle iOS SDK
//
//  Created by Rolando Abarca on 11/19/13.
//  Copyright (c) 2013 Vungle Inc. All rights reserved.
//

#import <Foundation/Foundation.h>
#import <UIKit/UIKit.h>

extern NSString* VungleSDKVersion;
extern NSString* VunglePlayAdOptionKeyIncentivized;
extern NSString* VunglePlayAdOptionKeyShowClose;
extern NSString* VunglePlayAdOptionKeyOrientations;
extern NSString* VunglePlayAdOptionKeyUser;
extern NSString* VunglePlayAdOptionKeyPlacement;
extern NSString* VunglePlayAdOptionKeyExtraInfoDictionary;
extern NSString* VunglePlayAdOptionKeyExtra1;
extern NSString* VunglePlayAdOptionKeyExtra2;
extern NSString* VunglePlayAdOptionKeyExtra3;
extern NSString* VunglePlayAdOptionKeyExtra4;
extern NSString* VunglePlayAdOptionKeyExtra5;
extern NSString* VunglePlayAdOptionKeyExtra6;
extern NSString* VunglePlayAdOptionKeyExtra7;
extern NSString* VunglePlayAdOptionKeyExtra8;
extern NSString* VunglePlayAdOptionKeyLargeButtons;

@protocol VungleSDKLogger <NSObject>
- (void)vungleSDKLog:(NSString*)message;
@end

@class VungleSDK;

@protocol VungleAssetLoader<NSObject>
/**
 * should return a valid NSData containing the (raw) data of the asset for the specified
 * path or nil.
 */
- (NSData*)vungleLoadAsset:(NSString*)path;

/**
 * should return a valid UIImage for the specified path, or nil.
 */
- (UIImage*)vungleLoadImage:(NSString*)path;
@end


@protocol VungleSDKDelegate <NSObject>
@optional
/**
 * if implemented, this will get called when the SDK is about to show an ad. This point
 * might be a good time to pause your game, and turn off any sound you might be playing.
 */
- (void)vungleSDKwillShowAd;

/**
 * if implemented, this will get called when the SDK closes the ad view, but there might be
 * a product sheet that will be presented. This point might be a good place to resume your game
 * if there's no product sheet being presented. The viewInfo dictionary will contain the
 * following keys:
 * - "completedView": NSNumber representing a BOOL whether or not the video can be considered a
 *               full view.
 * - "playTime": NSNumber representing the time in seconds that the user watched the video.
 * - "didDownlaod": NSNumber representing a BOOL whether or not the user clicked the download
 *                  button.
 */
- (void)vungleSDKwillCloseAdWithViewInfo:(NSDictionary*)viewInfo willPresentProductSheet:(BOOL)willPresentProductSheet;

/**
 * if implemented, this will get called when the product sheet is about to be closed.
 */
- (void)vungleSDKwillCloseProductSheet:(id)productSheet;

/**
 * if implemented, this will get called when there is an ad cached and ready to be shown.
 */
- (void)vungleSDKhasCachedAdAvailable;

@end

@interface VungleSDK : NSObject
@property (strong) NSDictionary* userData;
@property (strong) id<VungleSDKDelegate> delegate;
@property (strong) id<VungleAssetLoader> assetLoader;
@property (strong) NSString* incentivizedAlertText;
@property (assign) BOOL muted;
@property (readonly) NSMutableDictionary* globalOptions;

/**
 * Returns the singleton instance.
 */
+ (VungleSDK*)sharedSDK;

/**
 * Initializes the SDK. You can get your app id on Vungle's dashboard: https://v.vungle.com
 */
- (void)startWithAppId:(NSString*)appId;

/**
 * Will play an ad, presenting the view over the passed viewController as a modal.
 */
- (void)playAd:(UIViewController*)viewController;

/**
 * Will play an ad, presenting the view over the passed viewController as a modal.
 * Pass options to decide what type of ad to show.
 */
- (void)playAd:(UIViewController *)viewController withOptions:(id)options;

/**
 * returns YES if there's a valid ad ready to play.
 */
- (BOOL)isCachedAdAvailable;

/**
 * Returns debug info.
 */
- (NSDictionary*)debugInfo;

/**
 * by default, logging is off.
 */
- (void)setLoggingEnabled:(BOOL)enable;

/**
 * Log a new message. The message will be sent to all loggers.
 */
- (void)log:(NSString*)message, ... NS_FORMAT_FUNCTION(1,2);

/**
 * Attach a new logger. It will get called on every log generated by Vungle (internally and externally).
 */
- (void)attachLogger:(id<VungleSDKLogger>)logger;

/**
 * Detaches a logger. Make sure to do this, otherwise you might leak memory.
 */
- (void)detachLogger:(id<VungleSDKLogger>)logger;

/**
 * this only works on the simulator
 */
- (void)clearCache;

/**
 * this also only works on the simulator
 */
- (void)clearSleep;

@end
